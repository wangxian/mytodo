// Generated by CoffeeScript 1.6.2
define(function(require, exports, module) {
  var $, Backbone, MainView, MainViewDef, TodoItemViewDef, TodoList, TodoListDef, TodoModelDef, _;

  $ = require('jquery');
  Backbone = require('gallery/backbone/0.9.10/backbone.js');
  _ = require('gallery/underscore/1.4.4/underscore.js');
  Backbone.emulateHTTP = false;
  Backbone.emulateJSON = false;
  TodoModelDef = Backbone.Model.extend({
    idAttribute: "_id",
    defaults: {
      "finished": 0,
      "title": ''
    },
    urlRoot: '/todo'
  });
  TodoListDef = Backbone.Collection.extend({
    model: TodoModelDef,
    url: function() {
      return '/todo?' + (new Date()).getTime();
    },
    initialize: function() {}
  });
  TodoItemViewDef = Backbone.View.extend({
    tagName: 'li',
    className: 'item',
    events: {
      'click .finish': 'finish',
      'click .delete': 'delete',
      'click .renew': 'renew',
      'dblclick .new': 'editing',
      'blur input': 'editOK',
      'keypress input': 'pressEnter'
    },
    template: function() {
      var tpl;

      tpl = "<input type=\"text\" />\n<span class=\"<%= it.get('finished')?'del':'new' %>\"><%= it.get('title') %></span>\n<span class=\"date\"><%= (new Date(it.get('post_date'))).toLocaleString() %></span>\n\n<% if(it.get('finished')){ %>\n<a href=\"javascript: void(0);\" class=\"renew\">恢复</a>\n<% }else{ %>\n<a href=\"javascript: void(0);\" class=\"finish\">完成</a>\n<% } %>\n\n<a href=\"javascript: void(0);\" class=\"delete\">删除</a>";
      return _.template(tpl, {
        it: this.model
      });
    },
    initialize: function() {
      return this.model.on('change', this.render, this);
    },
    render: function() {
      this.$el.html(this.template());
      return this;
    },
    finish: function() {
      return this.model.save({
        finished: 1
      });
    },
    renew: function() {
      return this.model.save({
        finished: 0
      });
    },
    "delete": function() {
      this.model.destroy();
      return this.$el.remove();
    },
    editing: function(e) {
      var width;

      if (this.$el.find('.new').width() > 740) {
        width = 740;
      } else {
        width = this.$el.find('.new').width();
      }
      this.$el.addClass('editing');
      return this.$el.find('input').val(this.$el.find('.new').text()).width(width).focus();
    },
    editOK: function(e) {
      var title;

      this.$el.removeClass('editing');
      title = this.$el.find('input').val();
      if (title !== this.model.get('title')) {
        return this.model.save({
          'title': 'title',
          title: title
        });
      }
    },
    pressEnter: function(e) {
      if (e.keyCode === 13) {
        return $(e.currentTarget).blur();
      }
    }
  });
  MainViewDef = Backbone.View.extend({
    el: $('.main'),
    events: {
      'click .post input[type="button"]': "newTodo",
      'keypress .post input[type="text"]': "pressEnter"
    },
    initialize: function() {
      TodoList.on('add', this.addOne, this);
      TodoList.on('reset', this.addAll, this);
      return TodoList.fetch();
    },
    addAll: function() {
      this.$(".todos ul").empty();
      return TodoList.each(this.addOne);
    },
    addOne: function(model) {
      var item;

      item = new TodoItemViewDef({
        "model": model
      });
      return this.$(".todos ul").prepend(item.render().el);
    },
    newTodo: function() {
      var _title;

      _title = this.$('.post input[type="text"]').val();
      if (_title) {
        return TodoList.create({
          title: _title,
          finished: 0
        });
      }
    },
    pressEnter: function(e) {
      if (e.keyCode === 13) {
        this.newTodo();
        return e.currentTarget.value = '';
      }
    }
  });
  TodoList = new TodoListDef;
  MainView = new MainViewDef;
  return window.TodoList = TodoList;
});
